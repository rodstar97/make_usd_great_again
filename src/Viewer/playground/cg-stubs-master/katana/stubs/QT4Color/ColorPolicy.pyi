# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import QT4FormWidgets as QT4FormWidgets
import QT4FormWidgets.PythonValuePolicy
from _typeshed import Incomplete
from typing import Set, Tuple

def CreateColorPolicy(name: str = ..., hasAlpha: bool = ..., enableFilmlook: Incomplete | None = ..., restrictComponents: Incomplete | None = ..., color: tuple = ..., readOnly: bool = ...) -> QT4FormWidgets.PythonValuePolicy: ...
def DoesColorPolicyEnableFilmlook(policy: QT4FormWidgets.PythonValuePolicy, default: Incomplete | None = ...) -> bool: ...
def DoesColorPolicyEnableNoFilmlookColorSpace(policy: QT4FormWidgets.PythonValuePolicy, default: Incomplete | None = ...) -> bool: ...
def DoesColorPolicyHaveAlpha(policy: QT4FormWidgets.PythonValuePolicy) -> bool: ...
def DoesColorPolicyRestrictComponents(policy: QT4FormWidgets.PythonValuePolicy, default: Incomplete | None = ...) -> bool: ...
def GetColorPolicyChildren(policy: QT4FormWidgets.PythonValuePolicy | None) -> list[QT4FormWidgets.PythonValuePolicy._NumberPythonPolicy]: ...
def GetColorPolicyRGBA(policy: QT4FormWidgets.PythonValuePolicy | None) -> None: ...
def GetDefaultColorComponentTab(policy: QT4FormWidgets.PythonValuePolicy | None) -> str: ...
def SetColorPolicyEnableFilmlook(policy: QT4FormWidgets.PythonValuePolicy, enableFilmlook: bool): ...
def SetColorPolicyEnableFilmlookDefault(default: bool): ...
def SetColorPolicyEnableNoFilmlookColorSpaceDefault(default: bool): ...
def SetColorPolicyRGBA(policy: QT4FormWidgets.PythonValuePolicy, color: tuple[float, ...], final: bool = ...) -> bool: ...
def SetColorPolicyRestrictComponents(policy: QT4FormWidgets.PythonValuePolicy, restrictComponents: bool): ...
def SetColorPolicyRestrictComponentsDefault(default: bool): ...
