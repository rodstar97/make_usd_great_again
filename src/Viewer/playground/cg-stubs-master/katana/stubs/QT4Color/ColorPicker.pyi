# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import QT4Color.ColorPolicy as ColorPolicy
import QT4Color.ColorTransforms as ColorTransforms
import QT4Color.DropType as DropType
import QT4Color.Globals as Globals
import QT4Color.Gradient1D as Gradient1D
import PyOpenColorIO as OCIO
import PyQt5.QtCore
import PyQt5.QtWidgets
import QT4FormWidgets as QT4FormWidgets
import QT4Widgets as QT4Widgets
import PyQt5.QtCore as QtCore
import PyQt5.QtGui as QtGui
import PyQt5.QtWidgets as QtWidgets
import QT4Color.ScreenScraper as ScreenScraper
from QT4Color.ColorDropWidget import ColorDropWidget as ColorDropWidget
from QT4Color.ColorFormWidget import ColorComponentTabGroup as ColorComponentTabGroup, UpdateThrottler as UpdateThrottler
from QT4Color.ColorTextWidget import ColorTextWidget as ColorTextWidget
from QT4Color.Gradient2D import Gradient2DWidget as Gradient2DWidget
from _typeshed import Incomplete
from typing import ClassVar, Set, Tuple

class ColorPicker(ColorPickerBase):
    def __init__(self, colorObj: Incomplete | None = ...) -> None: ...
    def _cancelClicked(self): ...
    def _okClicked(self): ...
    def closeEvent(self, e): ...

class ColorPickerBase(PyQt5.QtWidgets.QFrame):
    _ColorPickerBase__COLOR_DROP_HEIGHT: ClassVar[int] = ...
    _ColorPickerBase__COLOR_DROP_WIDTH: ClassVar[int] = ...
    accepted: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    colorPicker_setColor: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    rejected: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    def __init__(self, colorPolicy: Incomplete | None = ..., parent: Incomplete | None = ..., widgetFactory: Incomplete | None = ...) -> None: ...
    def _ColorPickerBase__addUpdateThrottlerCallbackToChildPolicies(self): ...
    def _ColorPickerBase__applyFilmlookCheckboxCB(self, checkState): ...
    def _ColorPickerBase__buildLayout(self, widgetFactory): ...
    def _ColorPickerBase__clampColor(self, color): ...
    def _ColorPickerBase__colorSampleDropCB(self, dropEvent): ...
    def _ColorPickerBase__colorTextValueChangedCB(self, color): ...
    def _ColorPickerBase__componentGradientValueChangedCB(self, color, final): ...
    def _ColorPickerBase__enableColorClampingCheckboxCB(self, checkState): ...
    def _ColorPickerBase__gradientComponentCapsuleCB(self, newEnabledItems, oldEnabledItems): ...
    def _ColorPickerBase__on_destroyed(self): ...
    def _ColorPickerBase__screenScraperCB(self, scrapedColor, final): ...
    def _ColorPickerBase__stateChangeHandler(self, event): ...
    def _ColorPickerBase__update(self): ...
    def _cancelClicked(self): ...
    def _okClicked(self): ...
    def getColorPolicy(self): ...
    def getPickingColorspace(self): ...
    def resetColor(self): ...
    def setColor(self, color, final: bool = ...): ...
    def setReadOnly(self, value): ...
    def updateColorSampleDragData(self): ...

class ModalColorPicker(MovableDialog):
    modalColorPicker_setColor: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    def __init__(self, colorPolicy) -> None: ...
    def _ModalColorPicker__shouldHideWindowFrame(self): ...
    def closeEvent(self, event): ...
    def colorChange(self, color): ...
    def getColor(self): ...

class MovableDialog(PyQt5.QtWidgets.QDialog):
    def __init__(self, parent: Incomplete | None = ...) -> None: ...
    def mouseMoveEvent(self, mouseEvent): ...
    def mousePressEvent(self, mouseEvent): ...
    def mouseReleaseEvent(self, mouseEvent): ...
