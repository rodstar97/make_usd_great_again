# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import PyQt5.QtCore
import PyQt5.QtWidgets
import QT4Widgets as QT4Widgets
import PyQt5.QtCore as QtCore
import PyQt5.QtGui as QtGui
import PyQt5.QtWidgets as QtWidgets
import QT4Color.Swatches as Swatches
from QT4Color.DropType import BuildDragDataFromInfo as BuildDragDataFromInfo, BuildDragPixmapFromColor as BuildDragPixmapFromColor, GetColorDragType as GetColorDragType, GetColorInfoFromDragObject as GetColorInfoFromDragObject, GetColorPolicyDragDict as GetColorPolicyDragDict
from typing import ClassVar, Set, Tuple

class ColorDropWidget(PyQt5.QtWidgets.QWidget):
    clickedSignal: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    dropEventSignal: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    def __init__(self, parent, enableFilmlook: bool = ..., enableNoFilmlookColorSpace: bool = ..., enableMinimalMode: bool = ..., hasAlpha: bool = ..., autoMaxHeight: bool = ..., fstopOffset: float = ...) -> None: ...
    def _ColorDropWidget__getSpotRect(self): ...
    def _ColorDropWidget__startDrag(self): ...
    def customEvent(self, event): ...
    def dragEnterEvent(self, ev): ...
    def dropEvent(self, ev): ...
    def getColor(self): ...
    def getFStopOffset(self): ...
    def mouseMoveEvent(self, ev): ...
    def mousePressEvent(self, ev): ...
    def mouseReleaseEvent(self, ev): ...
    def paintEvent(self, ev): ...
    def setDisplayColor(self, color): ...
    def setDragData(self, data): ...
    def setFilmlookEnabled(self, enabled): ...
    def setMinimalModeEnabled(self, enabled): ...
    def setNoFilmlookColorSpaceEnabled(self, enabled): ...
    def sizeHint(self): ...
