# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import CatalogAPI as CatalogAPI
import CatalogAPI.CatalogItem
import PyQt5.QtCore
import PyQt5.QtGui
import PyQt5.QtWidgets
import PyQt5.QtCore as QtCore
import PyQt5.QtGui as QtGui
import PyQt5.QtWidgets as QtWidgets
import PyUtilModule.RenderManager as RenderManager
import Utils as Utils
from _typeshed import Incomplete
from typing import ClassVar, Set, Tuple

class CatalogProgressWidget(ProgressWidget):
    def __init__(self, parent: Incomplete | None = ...) -> None: ...
    @staticmethod
    def GetProgressBarColors(catalogItem: CatalogAPI.CatalogItem.CatalogItem | None) -> None: ...
    def _CatalogProgressWidget__catalog_itemDelete_CB(self, eventType, eventID, item, **kwargs): ...
    def _CatalogProgressWidget__catalog_itemPropertyUpdate_cb(self, eventType, eventID, item): ...
    def _CatalogProgressWidget__update(self): ...
    def setCatalogItem(self, item): ...

class ProgressWidget(PyQt5.QtWidgets.QWidget):
    STATE_CANCELLED: ClassVar[int] = ...
    STATE_ERROR: ClassVar[int] = ...
    STATE_IN_PROGRESS: ClassVar[int] = ...
    STATE_NONE: ClassVar[int] = ...
    def __init__(self, parent: Incomplete | None = ...) -> None: ...
    @staticmethod
    def GetProgressBarColors(state: int, indefinite: bool = ...) -> None: ...
    def getFraction(self) -> float: ...
    def getState(self) -> int: ...
    def isIndefinite(self) -> bool: ...
    def paintEvent(self, event: PyQt5.QtGui.QPaintEvent): ...
    def setFraction(self, fraction: float): ...
    def setIndefinite(self, indefinite: bool): ...
    def setState(self, state: int): ...
    def sizeHint(self) -> PyQt5.QtCore.QSize: ...
