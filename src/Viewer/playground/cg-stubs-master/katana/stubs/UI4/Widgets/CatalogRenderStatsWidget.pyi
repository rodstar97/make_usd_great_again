# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import PyQt5.QtCore
import PyQt5.QtWidgets
import PyXmlIO
import PyQt5.QtCore as QtCore
import PyQt5.QtWidgets as QtWidgets
import Utils as Utils
from _typeshed import Incomplete
from typing import ClassVar, Set, Tuple

class CatalogRenderGlobalsStatsWidget(PyQt5.QtWidgets.QTreeWidget):
    statsPresent: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    def __init__(self, parent: Incomplete | None = ...) -> None: ...
    def _CatalogRenderGlobalsStatsWidget__catalog_itemDelete_CB(self, eventType, eventID, item, **kwargs): ...
    def _CatalogRenderGlobalsStatsWidget__catalog_renderStatsUpdate_CB(self, eventType, eventID, item, **kwargs): ...
    def getStats(self) -> PyXmlIO.Element | None: ...
    def setCatalogItem(self, item): ...
    def updateState(self): ...

class CatalogRenderTaskByNameStatsWidget(PyQt5.QtWidgets.QTreeWidget):
    statsPresent: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    def __init__(self, parent: Incomplete | None = ...) -> None: ...
    def _CatalogRenderTaskByNameStatsWidget__catalog_itemDelete_CB(self, eventType, eventID, item, **kwargs): ...
    def _CatalogRenderTaskByNameStatsWidget__catalog_renderStatsUpdate_CB(self, eventType, eventID, item, **kwargs): ...
    def getStats(self) -> PyXmlIO.Element | None: ...
    def setCatalogItem(self, item): ...
    def updateState(self): ...

class CatalogRenderTaskByTypeStatsWidget(PyQt5.QtWidgets.QTreeWidget):
    statsPresent: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    def __init__(self, parent: Incomplete | None = ...) -> None: ...
    def _CatalogRenderTaskByTypeStatsWidget__catalog_itemDelete_CB(self, eventType, eventID, item, **kwargs): ...
    def _CatalogRenderTaskByTypeStatsWidget__catalog_renderStatsUpdate_CB(self, eventType, eventID, item, **kwargs): ...
    def getStats(self) -> PyXmlIO.Element | None: ...
    def setCatalogItem(self, item): ...
    def updateState(self): ...
