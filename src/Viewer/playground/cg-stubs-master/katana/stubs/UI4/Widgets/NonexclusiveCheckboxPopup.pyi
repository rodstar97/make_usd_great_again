# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import UI4.Util.IconManager as IconManager
import PyQt5.QtCore
import QT4Widgets as QT4Widgets
import PyQt5.QtCore as QtCore
import PyQt5.QtGui as QtGui
import PyQt5.QtWidgets as QtWidgets
from QT4Widgets.FilterablePopupButton import FilterablePopupButton
from typing import ClassVar, Set, Tuple

class NonexclusiveCheckboxPopup(FilterablePopupButton):
    valuesChanged: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    def __init__(self, parent, emptyLabel: str = ..., showValues: bool = ..., nameCheckable: bool = ...) -> None: ...
    def _NonexclusiveCheckboxPopup__addToValues(self, value): ...
    def _NonexclusiveCheckboxPopup__itemChosen(self, name, meta): ...
    def _NonexclusiveCheckboxPopup__popupClosed(self): ...
    def _NonexclusiveCheckboxPopup__removeFromValues(self, value): ...
    def _NonexclusiveCheckboxPopup__setItemCheck(self, item): ...
    def _NonexclusiveCheckboxPopup__treeCheckboxItem(self, event): ...
    def _NonexclusiveCheckboxPopup__treeMouseMoveEvent(self, event): ...
    def _NonexclusiveCheckboxPopup__treeMousePressEvent(self, event): ...
    def _NonexclusiveCheckboxPopup__treeMouseReleaseEvent(self, event): ...
    def addItem(self, *args, **kwds): ...
    def clear(self): ...
    def getItemNames(self): ...
    def getValues(self): ...
    def setActiveColor(self, c): ...
    def setDragToToggle(self, state): ...
    def setEmptyLabel(self, label): ...
    def setNoActiveColor(self): ...
    def setValues(self, values, updateItems: bool = ..., sendSignal: bool = ..., force: bool = ...): ...
