# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import PyQt5.QtWidgets
import QT4FormWidgets as QT4FormWidgets
import PyQt5.QtCore as QtCore
import PyQt5.QtGui as QtGui
import PyQt5.QtWidgets as QtWidgets
import UI4.Widgets.SortablePanel as SortablePanel
import UI4 as UI4
import UI4.Widgets.SortablePanel
from _typeshed import Incomplete
from typing import Set, Tuple

class BooleanPanel(UI4.Widgets.SortablePanel.SortablePanelBase):
    def __init__(self, parent, entry, policy: Incomplete | None = ..., includeGroupsInMenu: bool = ...) -> None: ...
    def getChildWidget(self): ...
    def getEntry(self): ...

class ComparisonPanel(UI4.Widgets.SortablePanel.SortablePanelBase):
    def __init__(self, parent, entry, policy: Incomplete | None = ..., includeGroupsInMenu: bool = ...) -> None: ...
    def getEntry(self): ...

class ConditionalHintEditor(UI4.Widgets.SortablePanel.SortablePanelFormWidget):
    def __init__(self, parent, policy, factory, rootEntry, includeGroupsInMenu: bool = ...) -> None: ...
    def _ConditionalHintEditor__addCondition(self, action): ...
    def _ConditionalHintEditor__buildPanels(self, entry): ...
    def _buildControlWidget(self, hbox): ...
    def buildAddMenu(self, menu): ...
    def getEntry(self): ...
    def getOpWidget(self): ...

class ConditionalHintEditorDialog(PyQt5.QtWidgets.QDialog):
    def __init__(self, inputHints, inputPolicy, hintType, includeGroupsInMenu: bool = ...) -> None: ...
    def _ConditionalHintEditorDialog__getKey(self): ...
    def getResult(self): ...

class RelativePolicyPathSelectorWidget(PyQt5.QtWidgets.QFrame):
    def __init__(self, parent, policy: Incomplete | None = ..., includeGroupsInMenu: bool = ...) -> None: ...
    def _RelativePolicyPathSelectorWidget__pathPopupAboutToShow(self): ...
    def _RelativePolicyPathSelectorWidget__pathPopupItemChosen(self, text, meta): ...
    def _RelativePolicyPathSelectorWidget__showOnlyPeersCallback(self, state, name, meta): ...
    def _RelativePolicyPathSelectorWidget__walkPolicy(self, policy): ...
    def setText(self, value): ...
    def text(self): ...

def GetBooleanOperatorNames(): ...
def GetComparisonOperatorNames(): ...
def GetConditionalNamesFromHintDict(hintDict, hintType): ...
