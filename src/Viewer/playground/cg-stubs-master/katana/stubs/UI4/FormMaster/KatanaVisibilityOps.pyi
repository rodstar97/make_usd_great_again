# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import PyQt5.QtCore
import QT4FormWidgets as QT4FormWidgets
import QT4FormWidgets.Conditional
import PyQt5.QtCore as QtCore
import UI4.FormMaster.States as States
import Utils as Utils
from typing import ClassVar, Set, Tuple

class EndsWith(QT4FormWidgets.Conditional.ConditionalVisibilityOpBase):
    def __init__(self, targetPolicy, hints, prefix) -> None: ...
    def checkState(self): ...

class InputConnected(QT4FormWidgets.Conditional.ConditionalVisibilityOpBase):
    _InputConnected__PORTEVENTS: ClassVar[tuple] = ...
    conditionalStateEval: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    def __init__(self, targetPolicy, hints, prefix) -> None: ...
    def _InputConnected__notifyOfChange(self): ...
    def _InputConnected__portStatusChanged(self, args): ...
    def checkState(self): ...
    def freeze(self): ...
    def thaw(self): ...

class IsLocalAssignment(IsNodeDefault):
    def checkState(self): ...

class IsNodeDefault(QT4FormWidgets.Conditional.ConditionalVisibilityOpBase):
    conditionalStateEval: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    def __init__(self, targetPolicy, hints, prefix) -> None: ...
    def _IsNodeDefault__isNodeDefault(self, policy, recur: bool = ...): ...
    def _IsNodeDefault__targetPolicyStateChanged(self, event): ...
    def checkState(self): ...
    def freeze(self): ...
    def thaw(self): ...

class NumChildrenBase(QT4FormWidgets.Conditional.ConditionalVisibilityOpBase):
    conditionalStateEval: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    def __init__(self, targetPolicy, hints, prefix) -> None: ...
    def _NumChildrenBase__paramChildrenChange_CB(self, args): ...
    def _NumChildrenBase__setupEvents(self, enable): ...
    def _getNumChildren(self): ...
    def checkState(self): ...
    def freeze(self): ...
    def thaw(self): ...

class NumChildrenEqualTo(NumChildrenBase):
    def checkState(self): ...

class NumChildrenGreaterThanOrEqualTo(NumChildrenBase):
    def checkState(self): ...
