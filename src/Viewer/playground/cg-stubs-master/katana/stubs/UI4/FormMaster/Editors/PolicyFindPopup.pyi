# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import PyQt5.QtWidgets
import QT4FormWidgets as QT4FormWidgets
import PyQt5.QtCore as QtCore
import PyQt5.QtGui as QtGui
import PyQt5.QtWidgets as QtWidgets
import UI4 as UI4
import QT4Widgets.WidgetUtils as WidgetUtils
from QT4FormWidgets.FWidget import FWidget
from UI4.Widgets.ToolbarButton import ToolbarButton
from _typeshed import Incomplete
from typing import Set, Tuple

class PolicyFindPopupButton(ToolbarButton):
    def __init__(self, tooltip: str, parent: PyQt5.QtWidgets.QWidget) -> None: ...
    def _PolicyFindPopupButton__locationFilterCallback(self, state, name, meta): ...
    def _PolicyFindPopupButton__on_popup_hide(self): ...
    def _PolicyFindPopupButton__on_popup_itemChosen(self, text, meta): ...
    def _PolicyFindPopupButton__on_popup_show(self): ...
    def _PolicyFindPopupButton__on_pressed(self): ...
    def findPolicy(self, path): ...

class PolicyFindPopupFWidget(FWidget):
    def __init__(self, parent, pixmap: Incomplete | None = ...) -> None: ...
    def _PolicyFindPopupFWidget__itemChosen(self, text, meta): ...
    def _PolicyFindPopupFWidget__locationFilterCallback(self, state, name, meta): ...
    def _PolicyFindPopupFWidget__popupHidden(self): ...
    def _PolicyFindPopupFWidget__popupShow(self): ...
    def _PolicyFindPopupFWidget__showFindPopup(self): ...
    def findPolicy(self, path): ...
    def mousePressEvent(self, event): ...
    def paint(self, painter, width, height): ...
    def sizeHint(self): ...
