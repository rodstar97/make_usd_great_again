# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import AssetAPI as AssetAPI
import PyFnGeolib as FnGeolib
import UI4.FormMaster.Editors.NodeGroup as NodeGroup
import NodegraphAPI as NodegraphAPI
import Nodes3DAPI as Nodes3DAPI
import PyQt5.QtCore
import PyQt5.QtWidgets
import QT4FormWidgets as QT4FormWidgets
import QT4FormWidgets.FWidget
import PyQt5.QtCore as QtCore
import PyQt5.QtGui as QtGui
import PyQt5.QtWidgets as QtWidgets
import UI4.Widgets.SortablePanel as SortablePanel
import UI4 as UI4
import UI4.FormMaster.Editors.NodeGroup
import UI4.Widgets.SortablePanel
import Utils as Utils
from QT4FormWidgets.StringFormWidget import StringFormWidget
from typing import ClassVar, Set, Tuple

class IncludedOutputToggle(PyQt5.QtWidgets.QCheckBox):
    toggledWithName: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    def __init__(self, name, parent) -> None: ...
    def _IncludedOutputToggle__toggled(self, on): ...

class IncludedOutputsFMenu(QT4FormWidgets.FWidget.FMenu):
    def mousePressEvent(self, event): ...

class RenderNodeEditor(UI4.FormMaster.Editors.NodeGroup.NodeGroupFormWidget):
    def __init__(self, parent, policy, factory) -> None: ...
    def _RenderNodeEditor__actionButtonFillMenu(self, menu): ...
    def _RenderNodeEditor__allIncludedOutputsOff(self): ...
    def _RenderNodeEditor__allIncludedOutputsOn(self): ...
    def _RenderNodeEditor__allIncludedOutputsReset(self): ...
    def _RenderNodeEditor__includedOutputToggled(self, name, on): ...
    def _RenderNodeEditor__includedOutputsAboutToHide(self): ...
    def _RenderNodeEditor__includedOutputsFillMenu(self, menu): ...
    def _RenderNodeEditor__postCreateAssets(self, versionUp: bool = ...): ...
    def _RenderNodeEditor__postCreateAssetsVersionUp(self): ...
    def _RenderNodeEditor__preCreateAssets(self, versionUp: bool = ...): ...
    def _RenderNodeEditor__preCreateAssetsVersionUp(self): ...

class RenderOutputPanel(UI4.Widgets.SortablePanel.SortablePanelBase):
    def __init__(self, parent, outputInfo, enabledValuePolicy, outputIndex, compact) -> None: ...
    def _RenderOutputPanel__actionMenuAboutToShow(self): ...
    def _RenderOutputPanel__copyExpression(self): ...
    def _RenderOutputPanel__enabledCheckBoxToggled(self, on): ...
    def _RenderOutputPanel__enabledValuePolicyChanged(self, event): ...
    def _RenderOutputPanel__getMyNode(self): ...
    def _RenderOutputPanel__postCreateAsset(self, versionUp: bool = ...): ...
    def _RenderOutputPanel__postCreateAssetVersionUp(self): ...
    def _RenderOutputPanel__preCreateAsset(self, versionUp: bool = ...): ...
    def _RenderOutputPanel__preCreateAssetVersionUp(self): ...
    def _freeze(self): ...
    def _thaw(self): ...
    def refreshVersionInfo(self): ...
    def setDisplayStateFromOutputInfo(self, outputInfo): ...
    def setLocked(self, state): ...
    def updateLocationField(self): ...

class RenderOutputsEditor(UI4.Widgets.SortablePanel.SortablePanelFormWidget):
    def __init__(self, parent, policy, factory) -> None: ...
    def _RenderOutputsEditor__handlePassNamePolicyEvent(self, event): ...
    def _RenderOutputsEditor__idle(self, *args, **kwds): ...
    def _RenderOutputsEditor__refreshVersionInfo(self, event, eventId, *args, **kwargs): ...
    def _RenderOutputsEditor__setLabel(self, num): ...
    def _RenderOutputsEditor__syncWithIncomingScenegraph(self): ...
    def _RenderOutputsEditor__terminalOpCallback(self, port: NodegraphAPI.Port, graphState: NodegraphAPI.GraphState, op, transaction): ...
    def _freeze(self): ...
    def _participatesInLabelAlignment(self): ...
    def _thaw(self): ...
    def manualSyncIncoming(self): ...
    def refreshVersionInfo(self): ...
    def setErrorMessage(self, msg): ...
    def updateOutputs(self, outputInfoList): ...

class RenderPassnameEditor(StringFormWidget):
    def __init__(self, parent, policy, factory) -> None: ...
    def _RenderPassnameEditor__updateWarning(self): ...
    def valueChangedEvent(self, event): ...
