# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import UI4.FormMaster.Editors.HideTitleGroup as HideTitleGroup
import UI4.FormMaster.Editors.Number as Number
import QT4Color as QT4Color
import QT4FormWidgets as QT4FormWidgets
import QT4FormWidgets.ValuePolicy
import PyQt5.QtCore as QtCore
import PyQt5.QtWidgets as QtWidgets
import UI4.FormMaster.Editors.HideTitleGroup
import UI4.FormMaster.Editors.Number
import Utils as Utils
from QT4FormWidgets.GroupFormWidget import GroupFormWidget
from typing import Set, Tuple

class ColorSliderGroupFormWidget(GroupFormWidget):
    def __init__(self, parent, policy, factory) -> None: ...
    def _ColorSliderGroupFormWidget__reset_CB(self): ...
    def _ColorSliderGroupFormWidget__setColorRawRGB(self, rgbColor, final: bool = ...): ...
    def _ColorSliderGroupFormWidget__updateColorWidget(self): ...
    def _ColorSliderGroupFormWidget__updateLockState(self): ...
    def _getColorPolicies(self): ...
    def _lockChanged(self, state): ...
    def _popdownCreated(self, popdown): ...
    def getPopdownWidget(self): ...
    def showPopdown(self, value): ...
    def valueChangedEvent(self, event): ...

class ColorWheelAndLumaSliderGroupFormWidget(UI4.FormMaster.Editors.HideTitleGroup.HideTitleGroupFormWidget):
    def __init__(self, parent, policy, factory) -> None: ...
    def _ColorWheelAndLumaSliderGroupFormWidget__lumaChanged_CB(self, luma, final: bool = ...): ...
    def _ColorWheelAndLumaSliderGroupFormWidget__lumaValueChanged(self, event): ...
    def _ColorWheelAndLumaSliderGroupFormWidget__reset_CB(self): ...
    def _ColorWheelAndLumaSliderGroupFormWidget__setColorRawRGB(self, rgbColor, final: bool = ...): ...
    def _ColorWheelAndLumaSliderGroupFormWidget__updateColorWidget(self): ...
    def _ColorWheelAndLumaSliderGroupFormWidget__updateLockState(self): ...
    def _ColorWheelAndLumaSliderGroupFormWidget__updateLumaWidget(self): ...
    def _ColorWheelAndLumaSliderGroupFormWidget__valueChanged(self, event): ...
    def _createChildWidget(self, *args): ...
    def _freeze(self): ...
    def _lockChanged(self, state): ...
    def _popdownCreated(self, popdown): ...
    def _thaw(self): ...
    def showPopdown(self, value): ...

class ColorWheelGroupFormWidget(UI4.FormMaster.Editors.HideTitleGroup.HideTitleGroupFormWidget):
    def __init__(self, parent, policy, factory) -> None: ...
    def _ColorWheelGroupFormWidget__reset_CB(self): ...
    def _ColorWheelGroupFormWidget__setColorRawRGB(self, rgbColor, final: bool = ...): ...
    def _ColorWheelGroupFormWidget__updateColorWidget(self): ...
    def _ColorWheelGroupFormWidget__updateLockState(self): ...
    def _ColorWheelGroupFormWidget__valueChanged(self, event): ...
    def _freeze(self): ...
    def _getColorPolicies(self): ...
    def _lockChanged(self, state): ...
    def _popdownCreated(self, popdown): ...
    def _thaw(self): ...
    def getPopdownWidget(self): ...
    def showPopdown(self, value): ...

class UnitsNumberWidget(UI4.FormMaster.Editors.Number.KatanaNumberFormWidget):
    def __init__(self, parent, policy, factory) -> None: ...
    def _UnitsNumberWidget__updateInfo(self): ...
    def _UnitsNumberWidget__valueChanged(self, event): ...
    def _freeze(self): ...
    def _thaw(self): ...

class _HideStateValuePolicyProxy(QT4FormWidgets.ValuePolicy.ValuePolicyProxy):
    def shouldDisplayState(self): ...
