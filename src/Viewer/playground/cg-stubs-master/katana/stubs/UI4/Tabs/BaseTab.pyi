# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import UI4.App as App
import KatanaResources as KatanaResources
import UI4.MainUI as MainUI
import PyQt5.QtCore
import PyQt5.QtGui
import PyQt5.QtWidgets
import PyQt5.QtCore as QtCore
import PyQt5.QtGui as QtGui
import PyQt5.QtWidgets as QtWidgets
import UI4.Widgets.BaseWidgets
import Utils as Utils
import typing
from UI4.Widgets.BaseWidgets import BaseFrame as BaseFrame
from UI4.Widgets.IconLabelFrame import IconLabelFrame as IconLabelFrame
from _typeshed import Incomplete
from typing import ClassVar, Set, Tuple

class BaseTab(UI4.Widgets.BaseWidgets.BaseFrame):
    tabClosed: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    def __init__(self, parent: PyQt5.QtWidgets.QWidget | None, flags: int = ..., deprecatedBy: Incomplete | None = ...) -> None: ...
    def _BaseTab__addDeprecationWarningFrame(self): ...
    def _BaseTab__linkClickCallback(self, link: str): ...
    def _BaseTab__on_pref_changed(self, eventType: str | None, eventID: typing.Hashable, prefKey: str, prefValue: object): ...
    def _BaseTab__removeDeprecationWarningFrame(self): ...
    def _BaseTab__showDeferredWidgets(self, events): ...
    def _showWidgetLater(self, widget: PyQt5.QtWidgets.QWidget): ...
    def applySettings(self, settings: dict): ...
    def closeEvent(self, event: PyQt5.QtGui.QCloseEvent): ...
    def getMenuBar(self) -> PyQt5.QtWidgets.QMenuBar | None: ...
    def getSettings(self) -> dict: ...
    def getTabTitle(self) -> str | None: ...
    def on_animation_finished(self): ...
    def on_dismissButton_clicked(self): ...
    def on_replaceTabButton_clicked(self): ...
    def showEvent(self, event: PyQt5.QtGui.QShowEvent): ...
    def __lt__(self, other) -> bool: ...
