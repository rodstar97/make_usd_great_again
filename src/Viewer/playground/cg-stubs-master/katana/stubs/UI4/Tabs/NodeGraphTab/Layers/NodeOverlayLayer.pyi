# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import DrawingModule as DrawingModule
import NodegraphAPI as NodegraphAPI
import Nodes2DAPI as Nodes2DAPI
import UI4.KatanaPrefs.PrefNames as PrefNames
import PyQt5.QtGui
import QT4GLLayerStack as QT4GLLayerStack
import QT4GLLayerStack.LayerStack
import QT4Widgets as QT4Widgets
import PyQt5.QtCore as QtCore
import PyQt5.QtGui as QtGui
import UI4 as UI4
from UI4.KatanaPrefs.KatanaPrefsObject import KatanaPrefs as KatanaPrefs
from typing import ClassVar, Set, Tuple

g_threshold: float

class NodeOverlayLayer(QT4GLLayerStack.LayerStack.Layer):
    _NodeOverlayLayer__nodeTypeExcludeList: ClassVar[dict] = ...
    kEditedNodeColor: ClassVar[PyQt5.QtGui.QColor] = ...
    kErrorNodeColor: ClassVar[PyQt5.QtGui.QColor] = ...
    kViewedNodeColor: ClassVar[PyQt5.QtGui.QColor] = ...
    def __init__(self, *args, **kwargs) -> None: ...
    def autoSetInfo(self, node: NodegraphAPI.Node, useExcludeList: bool = ...): ...
    def paintGL(self): ...
    def processEvent(self, event): ...
    def setNodeName(self, name, nodeType: str = ..., nodeInfo: str = ..., useExcludeList: bool = ..., hasNodeError: bool = ..., hasViewFlag: bool = ..., hasEditFlag: bool = ...): ...

def DrawNodeNameOverlay(nodeName, nodeType, pos, wsize, defaultNodeColor, nodeTypeColor, backgroundColor, textColor, lineColor, edgePad: int = ..., nodeInfo: str = ...): ...
def GetViewMaskInfo(node: NodegraphAPI.Node): ...
