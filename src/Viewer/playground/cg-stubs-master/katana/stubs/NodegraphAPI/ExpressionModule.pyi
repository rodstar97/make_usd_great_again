# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import AssetAPI as AssetAPI
import ConfigurationAPI_cmodule as Configuration
import Utils.EventModule as EventModule
import PyFnGeolibServices.ExpressionMath as ExpressionMath
import PyFnAttribute as FnAttribute
import NodegraphAPI
import NodegraphAPI_cmodule as NodegraphAPI_cmodule
import NodegraphAPI.NodegraphGlobals as NodegraphGlobals
import PyFCurve as PyFCurve
import PyResolutionTableFn as ResolutionTable
import Utils as Utils
from PyFnGeolibServices.ExpressionMath import function as function
from _typeshed import Incomplete
from typing import ClassVar, Set, Tuple

class ProjectSettings:
    __pychecker__: ClassVar[str] = ...
    def __init__(self) -> None: ...
    def __getattr__(self, attr): ...
    @property
    def assetID(self): ...
    @property
    def dir(self): ...
    @property
    def file(self): ...
    @property
    def originalAssetID(self): ...

class _ParamRef:
    def __init__(self, param) -> None: ...
    def getChildren(self): ...
    def getNode(self) -> NodegraphAPI.Node: ...
    def getNodeName(self): ...
    def getParent(self): ...
    def isNumber(self): ...
    def __abs__(self): ...
    def __add__(self, other): ...
    def __bool__(self) -> bool: ...
    def __call__(self, time: Incomplete | None = ...): ...
    def __div__(self, other): ...
    def __divmod__(self, other): ...
    def __eq__(self, other) -> bool: ...
    def __float__(self) -> float: ...
    def __floordiv__(self, other): ...
    def __getattr__(self, attr): ...
    def __getitem__(self, key): ...
    def __int__(self) -> int: ...
    def __iter__(self): ...
    def __len__(self) -> int: ...
    def __lt__(self, other) -> bool: ...
    def __mod__(self, other): ...
    def __mul__(self, other): ...
    def __neg__(self): ...
    def __pos__(self): ...
    def __pow__(self, other, modulo: Incomplete | None = ...): ...
    def __radd__(self, other): ...
    def __rdiv__(self, other): ...
    def __rdivmod__(self, other): ...
    def __rfloordiv__(self, other): ...
    def __rmod__(self, other): ...
    def __rmul__(self, other): ...
    def __rpow__(self, other): ...
    def __rsub__(self, other): ...
    def __rtruediv__(self, other): ...
    def __sub__(self, other): ...
    def __truediv__(self, other): ...

def FCurveLookup(curveFile, curveName, frame): ...
def GetExpressionGlobalValue(name: str): ...
def SetExpressionGlobalValue(name: str, value): ...
def SetupExpressionGlobalScopeFromRootNode(): ...
