# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import QT4Browser.BrowserFiltering as BrowserFiltering
import QT4Browser.BrowserSettings as BrowserSettings
import QT4Browser.FileInfo as FileInfo
import PyQt5.QtCore
import PyQt5.QtWidgets
import QT4Browser.FileInfo
import PyQt5.QtCore as QtCore
import PyQt5.QtGui as QtGui
import PyQt5.QtWidgets as QtWidgets
import re
from _typeshed import Incomplete
from typing import ClassVar, Set, Tuple

class FileBrowser(PyQt5.QtWidgets.QFrame):
    accept: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    def __init__(self, *args, **kargs) -> None: ...
    def _FileBrowser__connect(self): ...
    def _FileBrowser__dirFilterChanged(self, filterText): ...
    def _FileBrowser__doubleclick_filename(self, fileNameQStr): ...
    def _FileBrowser__fileFilterChanged(self, filterText): ...
    def _FileBrowser__locationEntered(self): ...
    def _FileBrowser__setup_children(self): ...
    def _FileBrowser__setup_layout(self): ...
    def _FileBrowser__singleclick_filename(self, fileNameQStr): ...
    def canAccept(self): ...
    def commitCurrentLocation(self): ...
    def currentLocation(self): ...
    def dirsOnly(self): ...
    def fileFilter(self): ...
    def hideEvent(self, event): ...
    def loadSettings(self): ...
    def saveSettings(self): ...
    def selectFileFilter(self, filterText): ...
    def setCurrentLocation(self, loc): ...
    def setDirFilter(self, filterText): ...
    def setDirsOnly(self, dirsOnly): ...
    def setFileFilter(self, filterText): ...
    def setPreview(self, preview): ...
    def setShowHidden(self, flag): ...
    def setShowSequence(self, flag): ...
    def setToDefaultLocation(self): ...
    def showEvent(self, event): ...
    def showHidden(self): ...
    def showSequence(self): ...

class _DirectoryCombo(PyQt5.QtWidgets.QFrame):
    activated: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    back_list: ClassVar[list] = ...
    link_list: ClassVar[list] = ...
    recent_list: ClassVar[list] = ...
    ss_list: ClassVar[list] = ...
    def __init__(self, *args) -> None: ...
    def _DirectoryCombo__addToRecent(self, location): ...
    def _DirectoryCombo__back_clicked(self): ...
    def _DirectoryCombo__item_completing(self, dirQStr): ...
    def _DirectoryCombo__item_selected(self, dirQStr): ...
    def _DirectoryCombo__up_clicked(self): ...
    def currentLocation(self): ...
    def getRecentList(self): ...
    def refresh(self): ...
    def setCurrentLocation(self, location, recordHistory: bool = ..., noRefresh: bool = ...): ...
    def setRecentList(self, rlist, setBackList: bool = ...): ...

class _EatEnterQComboBox(PyQt5.QtWidgets.QComboBox):
    def __init__(self, parent: Incomplete | None = ...) -> None: ...
    def event(self, evt): ...

class _EatEnterWCursorMangementQComboBox(_EatEnterQComboBox):
    def __init__(self, *args, **kargs) -> None: ...
    def _EatEnterWCursorMangementQComboBox__activated(self, index): ...
    def setCurrentIndex(self, index): ...

class _FileListModel(QT4Browser.FileInfo.AbstractFileTableModel):
    FullPathRole: ClassVar[int] = ...
    def __init__(self, *args) -> None: ...
    def _FileListModel__applyFilter(self): ...
    def currentLocation(self): ...
    def data(self, index, role): ...
    def dirFilter(self): ...
    def dirsOnly(self): ...
    def fileFilter(self): ...
    def refresh(self): ...
    def setCurrentLocation(self, location): ...
    def setDirFilter(self, filterText): ...
    def setDirsOnly(self, dirsOnly): ...
    def setFileFilter(self, filterText): ...
    def setShowHidden(self, flag): ...
    def setShowSequence(self, flag): ...
    def showHidden(self): ...
    def showSequence(self): ...

class _FileListView(QT4Browser.FileInfo.FileTableView):
    clicked: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    currentChangedSignal: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    doubleClicked: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    def __init__(self, *args) -> None: ...
    def _FileListView__itemClicked(self, index): ...
    def _FileListView__itemDoubleClicked(self, index): ...
    def _modelReset(self): ...
    def currentChanged(self, current, previous): ...
    def event(self, evt): ...
    def selectionChanged(self, selected, deselected): ...

class _PathField(PyQt5.QtWidgets.QLineEdit):
    _PathField__env_var_re: ClassVar[re.Pattern] = ...
    selectionChanged: ClassVar[PyQt5.QtCore.pyqtSignal] = ...
    def __init__(self, *args) -> None: ...
    def _PathField__getCompletionText(self): ...
    def _PathField__refresh(self): ...
    def _PathField__textChanged(self, newTextQStr): ...
    def currentLocation(self): ...
    def dirFilter(self): ...
    def event(self, evt): ...
    def fileFilter(self): ...
    def paintEvent(self, evt): ...
    def setCurrentLocation(self, location): ...
    def setDirFilter(self, filterText): ...
    def setDirName(self, dirName): ...
    def setDirsOnly(self, on): ...
    def setFileFilter(self, filterText): ...
    def setShowFullPath(self, on): ...
    def setShowHidden(self, flag): ...
    def setShowSequence(self, flag): ...
    def showHidden(self): ...
    def showSequence(self): ...
    def str(self): ...

class _PreviewPane(PyQt5.QtWidgets.QLabel):
    def __init__(self, fb, cb, parent) -> None: ...
    def _PreviewPane__callCallback(self, size): ...
    def resizeEvent(self, e): ...
    def setLocation(self, location): ...
