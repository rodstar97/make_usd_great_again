# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import QT4FormWidgets.ArrayItemEntry as ArrayItemEntry
import QT4FormWidgets.PaintingUtils as PaintingUtils
import PyQt5.QtCore as QtCore
import PyQt5.QtGui as QtGui
import PyQt5.QtWidgets as QtWidgets
from QT4FormWidgets.FWidget import FBoxLayout as FBoxLayout, FButton as FButton, FDisclosureTriangle as FDisclosureTriangle, FLabel as FLabel, FLockIcon as FLockIcon, FMenu as FMenu, FPixmap as FPixmap, FSpacer as FSpacer, FStateBadge as FStateBadge, FSvgIcon as FSvgIcon, FToggleStateBadge as FToggleStateBadge, FWidget as FWidget
from QT4FormWidgets.FormWidget import AlignChildLabelWidths as AlignChildLabelWidths, AlignLeftControlWidths as AlignLeftControlWidths, FormWidget as FormWidget, ScrubbingStates as ScrubbingStates
from QT4FormWidgets.InputWidgets import InputLineEdit as InputLineEdit
from QT4FormWidgets.MultiStateBadge import MultiStateBadge as MultiStateBadge, ToggleStateBadge as ToggleStateBadge, ToggleValuePolicyState as ToggleValuePolicyState
from QT4FormWidgets.NumberFormWidget import CreateSensitivityMenu as CreateSensitivityMenu, FormatNumber as FormatNumber, NumberFormWidget as NumberFormWidget
from QT4FormWidgets.StringFormWidget import StringFormWidget as StringFormWidget
from QT4FormWidgets.ValuePolicy import ValuePolicyEvent as ValuePolicyEvent
from typing import Set, Tuple

class ArrayFormWidget(FormWidget):
    def __init__(self, parent, policy, factory) -> None: ...
    def _ArrayFormWidget__doSizeEdit(self): ...
    def _ArrayFormWidget__doSliderChange(self, value): ...
    def _ArrayFormWidget__doSliderEdit(self): ...
    def _ArrayFormWidget__doValueEdit(self): ...
    def _ArrayFormWidget__freezeEntries(self): ...
    def _ArrayFormWidget__isInline(self): ...
    def _ArrayFormWidget__syncArrayTopology(self, forced): ...
    def _ArrayFormWidget__syncArrayValues(self): ...
    def _ArrayFormWidget__updateNavigation(self): ...
    def _buildControlWidget(self, controlLayout): ...
    def _buildLabel(self, labelText, pos: int = ...): ...
    def _createEntryWidget(self): ...
    def _createRowWidget(self, parent): ...
    def _freeze(self): ...
    def _lockChanged(self, state): ...
    def _popdownCreated(self, popdown): ...
    def _thaw(self): ...
    def showPopdown(self, value): ...
    def valueChangedEvent(self, event): ...
