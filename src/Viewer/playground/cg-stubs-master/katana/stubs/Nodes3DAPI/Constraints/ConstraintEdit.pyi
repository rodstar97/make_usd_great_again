# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import ConditionalStateGrammar as ConditionalStateGrammar
import Nodes3DAPI.DynamicParameterUtil as DynamicParameterUtil
import PyFnAttribute as FnAttribute
import PyFnGeolib as FnGeolib
import NodegraphAPI as NodegraphAPI
import PyFnAttribute
import QT4FormWidgets
import Utils as Utils
import typing
from ConditionalStateGrammar.Parser import ParseCSG as ParseCSG
from Nodes3DAPI.Node3D import Node3D as Node3D
from Nodes3DAPI_cmodule import BuildAttrListFromDynamicParameterGroup as BuildAttrListFromDynamicParameterGroup
from Utils.Decorators import deprecated as deprecated
from _typeshed import Incomplete
from typing import Set, Tuple

_ParamHints: dict
_Parameter_XML: str

class ConstraintEdit(Node3D):
    def __init__(self) -> None: ...
    def _ConstraintEdit__addAttributesToSet(self, graphState: NodegraphAPI.GraphState, argsParam, argsGb): ...
    def _ConstraintEdit__getConstraintIsNewParamValue(self): ...
    def _ConstraintEdit__getSourceOp(self, graphState: NodegraphAPI.GraphState, transaction): ...
    def _ConstraintEdit__setConstraintIsNewParam(self, constraintIsNew): ...
    def _ConstraintEdit__setConstraintParam(self, constraintAttr: PyFnAttribute.GroupAttribute): ...
    def _getIncomingSceneOpAndLocation(self, port: NodegraphAPI.Port, graphState: NodegraphAPI.GraphState, transaction): ...
    def _getOpChain(self, interface): ...
    def _getStaticAttrHintsForIncomingSceneQuery(self, attrPath: str) -> dict: ...
    def _updateParameters(self, groupAttr, force: bool = ..., defaultAttr: Incomplete | None = ...): ...
    def addParameterHints(self, attrName, inputDict): ...
    def callNewPolicyCreatedCallback(self, parameterPolicy: QT4FormWidgets.ParameterPolicy): ...
    def getScenegraphLocation(self, frameTime: Incomplete | None = ...): ...
    def getScenegraphLocationPath(self, time): ...
    def setNewPolicyCreatedCallback(self, newPolicyCreatedCallback: typing.Callable): ...
