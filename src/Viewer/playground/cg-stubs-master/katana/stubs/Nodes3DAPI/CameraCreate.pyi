# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import Nodes3DAPI.AbstractTransform as AT
import PyFnAttribute as FnAttribute
import PyFnGeolibServices as FnGeolibServices
import Nodes3DAPI.Node3D as Node3D
import NodegraphAPI as NodegraphAPI
import Nodes3DAPI.TransformUtil as TransformUtil
import typing
from Nodes3DAPI.AbstractTransform import AbstractTransform
from Nodes3DAPI_cmodule import BuildGroupAttrFromParam as BuildGroupAttrFromParam
from _typeshed import Incomplete
from typing import ClassVar, Set, Tuple

_ExtraHints: dict
_Parameter_XML: str
_interactiveXformText: str

class CameraNode3D(AbstractTransform):
    _CameraNode3D__passThroughExcludes: ClassVar[set] = ...
    def __init__(self) -> None: ...
    def _CameraNode3D__paramToTimeSampledDoubleAttr(self, param, frameTime, graphState: typing.Optional[NodegraphAPI.GraphState] = ...): ...
    def _getOpChain(self, interface): ...
    def addParameterHints(self, attrName, inputDict): ...
    def canOverride(self, attrName): ...
    def findOverrideParameter(self, path, attrName, time, index: Incomplete | None = ..., editable: bool = ..., **kwargs): ...
    def getCameraAttributes(self, cameraName, frameTime, graphState: typing.Optional[NodegraphAPI.GraphState] = ...): ...
    def getCameraGeometry(self, cameraName, frameTime, graphState: typing.Optional[NodegraphAPI.GraphState] = ...): ...
    def getDefaultObjectName(self): ...
    def getExtraParameters(self): ...
    def getObjectType(self): ...
    def getRootAttr(self, objScenegraphLocation): ...
    def getScenegraphLocation(self): ...
    def getWorldAttr(self, objScenegraphLocation, frameTime: Incomplete | None = ...): ...
    def setOverride(self, path, attrName, time, attrData, index: Incomplete | None = ..., **kwargs): ...
