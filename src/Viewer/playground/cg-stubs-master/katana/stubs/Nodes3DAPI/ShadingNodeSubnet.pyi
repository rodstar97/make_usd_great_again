# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import PyFnAttribute as FnAttribute
import PyFnGeolib as FnGeolib
import Nodes3DAPI.Node3D as Node3D
import NodegraphAPI as NodegraphAPI
import NodegraphAPI_cmodule
import Nodes3DAPI.Node3D_geolib3
import Utils as Utils
from Nodes3DAPI.Node3D_geolib3 import NodeGeolib3 as NodeGeolib3
from typing import ClassVar, Set, Tuple

_ExtraHints: dict

class BaseShadingNodeSubnet(Nodes3DAPI.Node3D_geolib3.NodeGeolib3):
    ADD_EXCEPTION_TEXT: ClassVar[str] = ...
    def __init__(self) -> None: ...
    def _BaseShadingNodeSubnet__buildOpArgs(self, graphState: NodegraphAPI.GraphState): ...
    def _BaseShadingNodeSubnet__getPublicInterfaceParameters(self, frameTime): ...
    def _getOp(self, port: NodegraphAPI.Port, graphState: NodegraphAPI.GraphState, visitedState, transaction): ...
    def addExposedParameters(self): ...
    @classmethod
    def addGroupParametersToList(cls, node: NodegraphAPI.Node, result): ...
    def addParameterHints(self, attrName, inputDict): ...
    def addPublicInterfaceParameter(self, param, checkForDuplicate: bool = ...): ...
    @classmethod
    def getGroupParametersAndPublicInterfaceOrders(cls, nodeList): ...
    def getPublicInterfaceOrder(self, frameTime): ...
    def getPublicInterfaceParameters(self, frameTime): ...

class ShadingNodeSubnet(NodegraphAPI_cmodule.PythonGroupNode, BaseShadingNodeSubnet):
    def __init__(self) -> None: ...
