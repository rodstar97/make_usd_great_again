# mypy: disable-error-code="misc, override, attr-defined, no-redef, assignment"

import ConfigurationAPI_cmodule as Configuration
import PyFnAttribute as FnAttribute
import GeoAPI as GeoAPI
import NodegraphAPI as NodegraphAPI
import PyOpenColorIO as OCIO
import PluginSystemAPI as PluginSystemAPI
import PyFnGeolibProducers
import RenderingAPI.RenderOutputs as RenderOutputs
import RenderingAPI as RenderingAPI
import re
import typing
from _typeshed import Incomplete
from typing import ClassVar, Set, Tuple

class GetRendererPluginDirError(RuntimeError): ...

class PluginBase:
    _PluginBase__misc_resolution_re: ClassVar[re.Pattern] = ...
    def _convertResolution(self, resolution): ...

def GetAllRenderMethods(includeInternal: bool = ...) -> list[dict]: ...
def GetBatchRenderMethodForRenderer(rendererName): ...
def GetDefaultRendererPluginName() -> str | None: ...
def GetInfoPlugin(rendererName): ...
def GetInfoPluginName(rendererName): ...
def GetInfoPluginNameForShaderType(shaderType): ...
def GetOutputChannelAttr(rendererName, dynamicOnly: bool = ...): ...
def GetOutputChannelDynamicParameters(rendererName): ...
def GetOutputChannelGlobalStatementsAttr(rendererName): ...
def GetOutputChannelParameters(rendererName): ...
def GetProcessedParams(paramList, hintDict: dict = ...): ...
def GetRenderMethodByName(methodName, rendererName: Incomplete | None = ...): ...
def GetRenderMethodForRendererAndMethodName(rendererName, methodName, includeBatch: bool = ...): ...
def GetRenderMethodsForRenderer(rendererName): ...
def GetRendererPluginDir(name): ...
def GetRendererPluginDisplayColor(rendererName: str): ...
def GetRendererPluginDisplayName(rendererName: str) -> str: ...
def GetRendererPluginNameForShaderType(shaderType): ...
def GetRendererPluginNames(includeViewer: bool = ..., includeInternal: bool = ...) -> list[str]: ...
def GetRendererSettingsAttr(outputType, producer: typing.Optional[PyFnGeolibProducers.GeometryProducer] = ..., producerBaseName: Incomplete | None = ...): ...
def GetRendererShaderTypeAttrPrefixes(rendererName: Incomplete | None = ...): ...
def GetRendererShaderTypeParamsAttr(rendererName: Incomplete | None = ...): ...
def GetRendererShaderTypeShaderAttr(rendererName: Incomplete | None = ...): ...
def GetRendererShaderTypes(renderer: Incomplete | None = ...): ...
def SetRendererPluginDisplayColor(rendererName: str, color): ...
def SetRendererPluginDisplayName(rendererName: str, displayName: str): ...
