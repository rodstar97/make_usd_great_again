from typing import Any, Union
from typing_extensions import Literal

import _curveknob
import _curvelib

class SplineKnob(_curveknob.CurveKnob):
    def defaultJoin(self, AShape: _curveknob.Element, BShape: _curveknob.Element) -> _curvelib.CorrespondencePoints: ...
    def getAB(self, s: _curveknob.Element) -> str: ...
    def getCorrespondencePoints(self, path: str) -> _curvelib.CorrespondencePoints: ...
    def setAB(self, s: _curveknob.Element, chan: Union[Literal['A'], Literal['B']]) -> None: ...
    def __delattr__(self, name) -> Any: ...
    def __setattr__(self, name, value) -> Any: ...
