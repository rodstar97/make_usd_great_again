from typing import ClassVar

class ToneMappingFunction:
    __members__: ClassVar[dict] = ...  # read-only
    ACES: ClassVar[ToneMappingFunction] = ...
    Linear: ClassVar[ToneMappingFunction] = ...
    __entries: ClassVar[dict] = ...
    def __init__(self, value: int) -> None: ...
    def __eq__(self, other: object) -> bool: ...
    def __getstate__(self) -> int: ...
    def __hash__(self) -> int: ...
    def __index__(self) -> int: ...
    def __int__(self) -> int: ...
    def __ne__(self, other: object) -> bool: ...
    def __setstate__(self, state: int) -> None: ...
    @property
    def name(self) -> str: ...

def get_color_lut_resource() -> str: ...
def get_environment_resource() -> str: ...
def get_tone_mapping() -> ToneMappingFunction: ...
def set_color_lut_resource(new_url: str) -> None: ...
def set_environment_resource(new_url: str) -> None: ...
def set_subsurface_scattering(enable: bool) -> None: ...
def set_tone_mapping(new_tone_mapping: ToneMappingFunction) -> None: ...
