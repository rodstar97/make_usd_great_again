from typing import ClassVar

DBG_ERROR: LogSeverity
DBG_INFO: LogSeverity
DBG_WARNING: LogSeverity
ERROR: LogSeverity
INFO: LogSeverity
PYTHON_CHANNEL: str
WARNING: LogSeverity

class LogSeverity:
    __members__: ClassVar[dict] = ...  # read-only
    DBG_ERROR: ClassVar[LogSeverity] = ...
    DBG_INFO: ClassVar[LogSeverity] = ...
    DBG_WARNING: ClassVar[LogSeverity] = ...
    ERROR: ClassVar[LogSeverity] = ...
    INFO: ClassVar[LogSeverity] = ...
    WARNING: ClassVar[LogSeverity] = ...
    __entries: ClassVar[dict] = ...
    def __init__(self, value: int) -> None: ...
    def __and__(self, other: object) -> object: ...
    def __eq__(self, other: object) -> bool: ...
    def __ge__(self, other: object) -> bool: ...
    def __getstate__(self) -> int: ...
    def __gt__(self, other: object) -> bool: ...
    def __hash__(self) -> int: ...
    def __index__(self) -> int: ...
    def __int__(self) -> int: ...
    def __invert__(self) -> object: ...
    def __le__(self, other: object) -> bool: ...
    def __lt__(self, other: object) -> bool: ...
    def __ne__(self, other: object) -> bool: ...
    def __or__(self, other: object) -> object: ...
    def __rand__(self, other: object) -> object: ...
    def __ror__(self, other: object) -> object: ...
    def __rxor__(self, other: object) -> object: ...
    def __setstate__(self, state: int) -> None: ...
    def __xor__(self, other: object) -> object: ...
    @property
    def name(self) -> str: ...

def log(severity: LogSeverity, channel: str, message: str) -> None: ...
