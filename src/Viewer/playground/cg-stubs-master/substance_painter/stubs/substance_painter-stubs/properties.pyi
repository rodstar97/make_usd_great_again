import _substance_painter.data_tweak
import typing
from _typeshed import Incomplete

PropertyValue = typing.Union[
    bool,
    int,
    typing.Tuple[int, int],
    typing.Tuple[int, int, int],
    typing.Tuple[int, int, int, int],
    float,
    typing.Tuple[float, float],
    typing.Tuple[float, float, float],
    typing.Tuple[float, float, float,float],
    str
]

class Property:
    handle: _substance_painter.data_tweak.PythonTweak
    def value(self) -> PropertyValue: ...
    def name(self) -> str: ...
    def short_name(self) -> str: ...
    def label(self) -> str: ...
    def widget_type(self) -> str: ...
    def enum_values(self) -> typing.Dict[str, int]: ...
    def enum_value(self, enum_label: str) -> int: ...
    def properties(self) -> typing.Dict[str, typing.Any]: ...
    def __init__(self, handle) -> None: ...
